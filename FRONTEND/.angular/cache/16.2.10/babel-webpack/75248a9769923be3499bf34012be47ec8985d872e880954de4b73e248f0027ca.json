{"ast":null,"code":"import { HttpResponse } from '@angular/common/http';\nimport { tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nexport let ApiHttpInterceptor = /*#__PURE__*/(() => {\n  class ApiHttpInterceptor {\n    constructor() {\n      this.jwtToken = '';\n    }\n    intercept(req, next) {\n      if (this.jwtToken != '') {\n        req = req.clone({\n          setHeaders: {\n            Authorization: `Bearer ${this.jwtToken}`\n          }\n        });\n        console.log('Bearer renvoyé : ' + this.jwtToken);\n      }\n      return next.handle(req).pipe(tap(evt => {\n        if (evt instanceof HttpResponse) {\n          let tab;\n          let enteteAuthorization = evt.headers.get('Authorization');\n          if (enteteAuthorization != null) {\n            tab = enteteAuthorization.split(/Bearer\\s+(.*)$/i);\n            if (tab.length > 1) {\n              this.jwtToken = tab[1];\n              console.log('Bearer récupéré : ' + this.jwtToken);\n            }\n          }\n        }\n      }));\n    }\n    static #_ = this.ɵfac = function ApiHttpInterceptor_Factory(t) {\n      return new (t || ApiHttpInterceptor)();\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ApiHttpInterceptor,\n      factory: ApiHttpInterceptor.ɵfac\n    });\n  }\n  return ApiHttpInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
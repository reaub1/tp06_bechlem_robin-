{"ast":null,"code":"import { HttpResponse } from '@angular/common/http';\nimport { tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nexport class ApiHttpInterceptor {\n  constructor() {\n    this.jwtToken = '';\n  }\n  intercept(req, next) {\n    if (this.jwtToken != '') {\n      req = req.clone({\n        setHeaders: {\n          Authorization: `Bearer ${this.jwtToken}`\n        }\n      });\n      console.log('Bearer renvoyé : ' + this.jwtToken);\n    }\n    return next.handle(req).pipe(tap(evt => {\n      if (evt instanceof HttpResponse) {\n        let tab;\n        let enteteAuthorization = evt.headers.get('Authorization');\n        if (enteteAuthorization != null) {\n          tab = enteteAuthorization.split(/Bearer\\s+(.*)$/i);\n          if (tab.length > 1) {\n            this.jwtToken = tab[1];\n            console.log('Bearer récupéré : ' + this.jwtToken);\n          }\n        }\n      }\n    }));\n  }\n}\nApiHttpInterceptor.ɵfac = function ApiHttpInterceptor_Factory(t) {\n  return new (t || ApiHttpInterceptor)();\n};\nApiHttpInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ApiHttpInterceptor,\n  factory: ApiHttpInterceptor.ɵfac\n});","map":{"version":3,"names":["HttpResponse","tap","ApiHttpInterceptor","constructor","jwtToken","intercept","req","next","clone","setHeaders","Authorization","console","log","handle","pipe","evt","tab","enteteAuthorization","headers","get","split","length","factory","ɵfac"],"sources":["/Users/robinbechlem/Desktop/CNAM 1A/SI-WEB/tp05_bechlem_robin/FRONTEND/src/app/http-interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Injectable()\nexport class ApiHttpInterceptor implements HttpInterceptor {\n  jwtToken: String = '';\n  constructor() {}\n\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    if (this.jwtToken != '') {\n      req = req.clone({\n        setHeaders: { Authorization: `Bearer ${this.jwtToken}` },\n      });\n      console.log('Bearer renvoyé : ' + this.jwtToken);\n    }\n\n    return next.handle(req).pipe(\n      tap((evt: HttpEvent<any>) => {\n        if (evt instanceof HttpResponse) {\n          let tab: Array<String>;\n          let enteteAuthorization = evt.headers.get('Authorization');\n          if (enteteAuthorization != null) {\n            tab = enteteAuthorization.split(/Bearer\\s+(.*)$/i);\n            if (tab.length > 1) {\n              this.jwtToken = tab[1];\n              console.log('Bearer récupéré : ' + this.jwtToken);\n            }\n          }\n        }\n      })\n    );\n  }\n}\n"],"mappings":"AACA,SAKEA,YAAY,QACP,sBAAsB;AAE7B,SAASC,GAAG,QAAQ,gBAAgB;;AAGpC,OAAM,MAAOC,kBAAkB;EAE7BC,YAAA;IADA,KAAAC,QAAQ,GAAW,EAAE;EACN;EAEfC,SAASA,CACPC,GAAqB,EACrBC,IAAiB;IAEjB,IAAI,IAAI,CAACH,QAAQ,IAAI,EAAE,EAAE;MACvBE,GAAG,GAAGA,GAAG,CAACE,KAAK,CAAC;QACdC,UAAU,EAAE;UAAEC,aAAa,EAAE,UAAU,IAAI,CAACN,QAAQ;QAAE;OACvD,CAAC;MACFO,OAAO,CAACC,GAAG,CAAC,mBAAmB,GAAG,IAAI,CAACR,QAAQ,CAAC;;IAGlD,OAAOG,IAAI,CAACM,MAAM,CAACP,GAAG,CAAC,CAACQ,IAAI,CAC1Bb,GAAG,CAAEc,GAAmB,IAAI;MAC1B,IAAIA,GAAG,YAAYf,YAAY,EAAE;QAC/B,IAAIgB,GAAkB;QACtB,IAAIC,mBAAmB,GAAGF,GAAG,CAACG,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;QAC1D,IAAIF,mBAAmB,IAAI,IAAI,EAAE;UAC/BD,GAAG,GAAGC,mBAAmB,CAACG,KAAK,CAAC,iBAAiB,CAAC;UAClD,IAAIJ,GAAG,CAACK,MAAM,GAAG,CAAC,EAAE;YAClB,IAAI,CAACjB,QAAQ,GAAGY,GAAG,CAAC,CAAC,CAAC;YACtBL,OAAO,CAACC,GAAG,CAAC,oBAAoB,GAAG,IAAI,CAACR,QAAQ,CAAC;;;;IAIzD,CAAC,CAAC,CACH;EACH;;;mBA9BWF,kBAAkB;AAAA;;SAAlBA,kBAAkB;EAAAoB,OAAA,EAAlBpB,kBAAkB,CAAAqB;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}